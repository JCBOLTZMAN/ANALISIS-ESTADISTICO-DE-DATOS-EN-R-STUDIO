m1 = matrix(5:20, nrow=5)
m2 = matrix(25:40, nrow = 5)
m3 = m1+m2
m3
m1
m2
m1 = matrix(5:20, nrow=4)
m2 = matrix(25:40, nrow = 4)
m3 = m1*m2
m3
,1
m1
m2
m3
a<-c(4,5,4)
b<-c(3,4,4)
d<-c(8,7,7)
B<-rbind(a,b,d)
det(B)
B}
B
matrix(1:9, nrow = 3)
m1 = matrix(5:20, nrow=4)
m2 = matrix(25:40, nrow = 4)
m3 = m1+m2
m1
m2
m3
m1 = matrix(5:20, nrow=4)
m2 = matrix(25:40, nrow = 4)
m3 = m1-m2
m3
m1 = matrix(5:20, nrow=4)
m2 = matrix(25:40, nrow = 4)
m3 = m1*m2
m3
a<-c(4,5,4)
b<-c(3,4,4)
d<-c(8,7,7)
B<-rbind(a,b,d)
det(B)
B
a<-c(4,5,4)
b<-c(3,4,4)
d<-c(8,7,7)
B<-rbind(a,b,d)
solve(B)
knitr::opts_chunk$set(echo = TRUE,results="asis",collapse=TRUE)
install.packages("lubridate")
library(lubridate)
install.packages("kableExtra")
library(kableExtra)
install.packages("psych")
library(psych)
a<-c(4,5,4)
b<-c(3,4,4)
d<-c(8,7,7)
B<-rbind(a,b,d)
diag(B)
a<-c(4,5,4)
b<-c(3,4,4)
d<-c(8,7,7)
B<-rbind(a,b,d)
B
colnames(B)=c(C1,C2,C3)
colnames(B)=c("C1","C2","C3")
B
rownames(B)=c("F1","F2","F3")
B
?rnmf
data("tumor") tumor.corrupted <- tumor set.seed(1) tumor.corrupted[sample(1:4900, round(0.05 * 4900), replace = FALSE)] <- 1 res.rnmf1 <- rnmf(X = tumor.corrupted, gamma = FALSE, my.seed = 1)
set.seed(876)
C1=sample(1:1000,100,replace = F)
C2=sample(1:1000,100,replace = F)
C3=sample(1:1000,100,replace = F)
C4=sample(1:1000,100,replace = F)
C5=sample(1:1000,100,replace = F)
m=cbind(C1,C2,C3,C4,C5)
t_m=t(m)
t_m
t_m[,1]
t_m[,1][,2]
colnames(t_m)
colnames(t_m) = c("A","B","C","D","E",
"F","G","H","I","J")
set.seed(876)
C1=sample(1:1000,10,replace = F)
C2=sample(1:1000,10,replace = F)
C3=sample(1:1000,10,replace = F)
C4=sample(1:1000,10,replace = F)
C5=sample(1:1000,10,replace = F)
m=cbind(C1,C2,C3,C4,C5)
t_m=t(m)
colnames(t_m) = c("A","B","C","D","E",
"F","G","H","I","J")
set.seed(876)
C1=sample(1:1000,10,replace = F)
C2=sample(1:1000,10,replace = F)
C3=sample(1:1000,10,replace = F)
C4=sample(1:1000,10,replace = F)
C5=sample(1:1000,10,replace = F)
m=cbind(C1,C2,C3,C4,C5)
t_m=t(m)
colnames(t_m) = c("A","B","C","D","E",
"F","G","H","I","J")
t_m
diag(1, nrow = 5)
?cor
A <- matrix(c(3, 2, 5, -1, 7, 3), ncol = 2, byrow = TRUE)
b <- c(10, 8, 20)
# Resolver el sistema de ecuaciones utilizando mínimos cuadrados
solucion <- lm(b ~ A - 1)
# Mostrar la solución
print(summary(solucion))
solucion$Coefficients
A <- matrix(c(3, 2, 5, -1, 7, 3), ncol = 2, byrow = TRUE)
b <- c(10, 8, 20)
# Resolver el sistema de ecuaciones utilizando mínimos cuadrados
solucion <- lm(b ~ A - 1)
solucion$Coefficients
coef(solucion)
x = c(3,5,7)
y = c(2,-1,3)
A <- cbind(x,y)
A
x = c(3,5,7)
y = c(2,-1,3)
A <- cbind(x,y)
b <- c(10, 8, 20)
solucion <- lm(b ~ A - 1)
coef(solucion)
coef(solucion)[1]
coef(solucion)[2]
?corrplot
?chart.Correlation
‘??chart.Correlation’
??chart.Correlation
install.packages("quarto")
library(quarto)
library(quarto)
setwd("C:/Users/jcarl/Desktop/CURSO_NUEVO/ANALISIS-ESTADISTICO-DE-DATOS-EN-R-STUDIO/cursos")
